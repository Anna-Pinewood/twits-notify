version: "3.8"

services:
  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbit:
    image: rabbitmq:3.11-management
    container_name: rabbit
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASSWORD}
    ports:
      - "${RABBIT_PORT}:5672"
      - "${RABBIT_UI_PORT}:15672"

  api:
    build: ./backend/api
    container_name: api
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      RABBIT_HOST: rabbit
      RABBIT_PORT: ${RABBIT_PORT}
    ports:
      - "${API_PORT}:8000"
    depends_on:
      - db
      - rabbit

  consumer:
    build: ./backend/consumer
    container_name: consumer
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      RABBIT_HOST: rabbit
      RABBIT_PORT: ${RABBIT_PORT}
    depends_on:
      - db
      - rabbit

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "${PROMETHEUS_PORT}:9090"
    depends_on:
      - api

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "${GRAFANA_PORT}:3000"
    depends_on:
      - prometheus

volumes:
  db_data: